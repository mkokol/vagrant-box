#package "apt"


# apt-get -t squeeze-backports install nginx-extras; apt-get install php5-fpm

# sudo vi /etc/apt/sources.list

Chef::Log.info("ADD TO REPO")


#cookbook_file "/etc/apt/sources.list.d/dotdeb.list" do
#  source "dotdeb.list"
#  mode 0644
#  owner "root"
#  group "root"
#  notifies :run, resources(:execute => "apt-get update"), :immediately
#end

# :bash => "dotdeb keys", 


bash "dotdeb keys" do
  code <<-EOH
    gpg --keyserver keys.gnupg.net --recv-key 89DF5277
    gpg -a --export 89DF5277 | apt-key add -
  EOH
  action :nothing
end



#    wget http://www.dotdeb.org/dotdeb.gpg -O- |apt-key add -
#    gpg --keyserver hkp://keys.gnupg.net --recv-keys ABF5BD827BD9BF62
#    gpg -a --export 7BD9BF62 | apt-key add -

#execute "apt-get update" do
#  command "apt-get update"
#  ignore_failure true
#  action :nothing
#end

execute "apt-get update" do
  action :nothing
end

apt_repository "dotdeb.org" do
  uri "http://php53.dotdeb.org"
#  components ["stable", "all"]
  components ["squeeze", "all"]
  deb_src true
  action :add
  notifies :run, resources(:bash => "dotdeb keys", :execute => "apt-get update"), :immediately
end



# :bash => "dotdeb keys", 

#Chef::Log.info("ADD TO REPO DONE")


%w{php5-fpm}.each do |pkg|
  package pkg do
    action :install
  end
end

# create root directory for project
directory node["nginx_config"]["www_path"] do
  owner "vagrant"
  group "vagrant"
  mode "0755"
  action :create
  recursive true
end


# create VirtualHost for nginx
template "/etc/nginx/sites-available/#{node['nginx_config']['server_name']}.conf" do
  source "vhost.erb"
  owner "root"
  group "root"
  mode "0644"
end
# create simlink in sites-enabled
link "/etc/nginx/sites-enabled/#{node['nginx_config']['server_name']}.conf" do
  to "/etc/nginx/sites-available/#{node['nginx_config']['server_name']}.conf"
  action :create
end

%W{php5-fpm nginx}.each do |s|
  service s do
    action :restart
  end
end


