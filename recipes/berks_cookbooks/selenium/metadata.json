{
  "name": "selenium",
  "description": "Installs/Configures Selenium",
  "long_description": "# Selenium Cookbook\n\n[![Cookbook Version](http://img.shields.io/cookbook/v/selenium.svg?style=flat-square)][cookbook]\n[![linux](http://img.shields.io/travis/dhoer/chef-selenium/master.svg?label=linux&style=flat-square)][linux]\n[![osx](http://img.shields.io/travis/dhoer/chef-selenium/macosx.svg?label=macosx&style=flat-square)][osx]\n[![win](https://img.shields.io/appveyor/ci/dhoer/chef-selenium/master.svg?label=windows&style=flat-square)][win]\n\n[cookbook]: https://supermarket.chef.io/cookbooks/selenium\n[linux]: https://travis-ci.org/dhoer/chef-selenium/branches\n[osx]: https://travis-ci.org/dhoer/chef-selenium/branches\n[win]: https://ci.appveyor.com/project/dhoer/chef-selenium\n\nThis cookbook installs and configures Selenium 3+ (http://www.seleniumhq.org/).\n\nThis cookbook comes with the following recipes:\n\n- **[default](https://github.com/dhoer/chef-selenium#default)** - Downloads and installs Selenium Standalone jar.\n- **[hub](https://github.com/dhoer/chef-selenium#hub)** - Installs and configures a Selenium Hub as a service.\n- **[node](https://github.com/dhoer/chef-selenium#node)** - Installs and configures a Selenium Node as service\n on Linux and a GUI service on Mac OS X and Windows.\n \nResources [selenium_hub](https://github.com/dhoer/chef-selenium#selenium_hub) and \n[selenium_node](https://github.com/dhoer/chef-selenium#selenium_node) are also available.\n\n## Usage\n\nSee [selenium_grid](https://github.com/dhoer/chef-selenium_grid#selenium-grid-cookbook) cookbook that wraps selenium, \nbrowsers, drivers, and screenresolution cookbooks into one comprehensive cookbook.\n\n## Requirements\n\n- Java (not installed by this cookbook)\n- Chef 12.6+ \n\n### Platforms\n\n- CentOS, Fedora, RedHat\n- Mac OS X\n- Debian, Ubuntu\n- Windows\n\n### Cookbooks\n\n- nssm - Required by Windows services only (e.g. Hub and HtmlUnit running in background)\n- macosx_autologin - Required by Mac OS X GUI services \n- windows \n- windows_autologin - Required by Windows GUI service\n\n## Recipes\n\n## default\n\nDownloads and installs Selenium Standalone jar.\n\n### Attributes\n\n- `node['selenium']['url']` - The download URL of Selenium Standalone jar. \n- `node['selenium']['windows']['home']` -  Home directory. Default `#{ENV['SYSTEMDRIVE']}/selenium`.\n- `node['selenium']['windows']['java']` -  Path to Java executable. Default \n`#{ENV['SYSTEMDRIVE']}\\\\java\\\\bin\\\\java.exe`.\n- `node['selenium']['unix']['home']` -  Home directory. Default `/opt/selenium`. \n- `node['selenium']['unix']['java']` -  Path to Java executable. Default `/usr/bin/java`.\n\n## hub\n\nInstalls and configures a Selenium Hub as a service.\n\n### Attributes\n\nSee [selenium_hub](https://github.com/dhoer/chef-selenium#attributes-3)\nresource attributes for description.\n \n## node\n\nInstalls and configures a Selenium Node as service on Linux and a GUI \nservice on Mac OS X and Windows.\n\n- Firefox browser must be installed outside of this cookbook.\n- Linux nodes without a physical monitor require a headless display\n(e.g., [xvfb](https://supermarket.chef.io/cookbooks/xvfb), \n[x11vnc](https://supermarket.chef.io/cookbooks/x11vnc),\netc...) and must be installed and configured outside this cookbook.\n- Mac OS X/Windows nodes must run as a GUI service and that requires a \nusername and password for automatic login. Note that Windows password \nis stored unencrypted under windows registry\n`HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon` and \nMac OS X  password is stored encrypted under `/etc/kcpassword` but it \ncan be easily decrypted.\n\n### Attributes\n\nSee [selenium_hub](https://github.com/dhoer/chef-selenium#attributes-4)\nresource attributes for description.\n    \n### Example\n\n#### Install Selenium Node with Firefox and HtmlUnit capabilities\n\n```ruby\nnode.override['selenium']['node']['username'] = 'vagrant' if platform?('windows', 'mac_os_x')\nnode.override['selenium']['node']['password'] = 'vagrant' if platform?('windows', 'mac_os_x')\n\nnode.override['selenium']['node']['capabilities'] = [\n  {\n    browserName: 'firefox',\n    maxInstances: 5,\n    seleniumProtocol: 'WebDriver'\n  },\n  {\n    browserName: 'htmlunit',\n    maxInstances: 1,\n    platform: 'ANY',\n    seleniumProtocol: 'WebDriver'\n  }\n]\n  \ninclude_recipe 'selenium::node'\n```\n\n## Resources\n\n## selenium_hub\n\nInstalls and configures a Selenium Hub as a service.\n\n### Attributes\n\n- `servicename` - Name attribute. The name of the service.\n- `host` - IP or hostname. Usually determined automatically. Most \ncommonly useful in exotic network configurations (e.g. network with \nVPN). Default `nil`.\n- `port` - The port number the server will use. Default: `4444`.\n- `jvm_args` -  JVM options, e.g., -Xms2G -Xmx2G. Default: `nil`.\n- `newSessionWaitTimeout` - The time (in ms) after which a new test \nwaiting for a node to become available will time out. When that happens, \nthe test will throw an exception before attempting to start a browser. \nAn unspecified, zero, or negative value means wait indefinitely.\nDefault: `-1`.\n- `prioritizer` - A class implementing the Prioritizer interface. \nSpecify a custom Prioritizer if you want to sort the order in which new \nsession requests are processed when there is a queue. \nDefault to null ( no priority = FIFO ).\n- `servlets` - List of extra servlets the grid (hub or node) will make \navailable. The servlet must exist in the path, e.g.,\n/grid/admin/Servlet. Default: `[]`.\n- `withoutServlets` - List of default (hub or node) servlets to disable. \nAdvanced use cases only. Not all default servlets can be disabled. \nDefault: `[]`.\n- `capabilityMatcher` - A class implementing the CapabilityMatcher \ninterface. Specifies the logic the hub will follow to define whether a \nrequest can be assigned to a node. For example, if you want to have the \nmatching process use regular expressions instead of exact match when \nspecifying browser version. ALL nodes of a grid ecosystem would then \nuse the same capabilityMatcher, as defined here.\nDefault: `org.openqa.grid.internal.utils.DefaultCapabilityMatcher`\n- `throwOnCapabilityNotPresent` -  If true, the hub will reject all test \nrequests if no compatible proxy is currently registered. If set to \nfalse, the request will queue until a node supporting the capability is \nregistered with the grid. Default: `true`.\n- `cleanUpCycle` -  Specifies how often the hub will poll (in ms) \nrunning proxies for timed-out (i.e. hung) threads. Must also specify \n\"timeout\" option. Default: `5000`.\n- `debug` -  Enables LogLevel.FINE. Default: `false`.\n- `timeout` -  Specifies the timeout before the server automatically \nkills a session that hasn't had any activity in the last X seconds. \nThe test slot will then be released for another test to use. This is \ntypically used to take care of client crashes. For grid hub/node roles, \ncleanUpCycle must also be set. Default: `1800`.\n- `browserTimeout` -  Number of seconds a browser session is allowed to \nhang while a WebDriver command is running (example: driver.get(url)). \nIf the timeout is reached while a WebDriver command is still processing, \nthe session will quit. Minimum value is `60`. An unspecified, zero, \nor negative value means wait indefinitely. Default: `0`.\n- `maxSession` - Max number of tests that can run at the same time on \nthe node, irrespective of the browser used. Default: `5`.\n- `jettyMaxThreads` - Max number of threads for Jetty. An unspecified, \nzero, or negative value means the Jetty default value (200) will be \nused. Default: `-1`.\n- `log` - The filename to use for logging. If omitted, will log to \nSTDOUT. Default: `nil`. \n\n## selenium_node\n\nInstalls and configures a Selenium Node as a service.\n\n### Attributes\n\n- `servicename` - Name attribute. The name of the service.\n- `host` - IP or hostname. Usually determined automatically. Most \ncommonly useful in exotic network configurations (e.g. network with \nVPN). Default `nil`.\n- `port` - The port number the server will use. Default: `5555`.\n- `hub` - The url that will be used to post the registration request. \nDefault: `http://localhost:4444`.\n- `jvm_args` -  JVM options, e.g., -Xms2G -Xmx2G. Default: `nil`.\n- `proxy` -  The class used to represent the node proxy. \nDefault: `org.openqa.grid.selenium.proxy.DefaultRemoteProxy`.\n- `maxSession` - Max number of tests that can run at the same time on \nthe node, irrespective of the browser used. Default: `5`.\n- `register` -  Node will attempt to re-register itself automatically \nwith its known grid hub if the hub becomes unavailable. Default: `true`.\n- `registerCycle` -  Specifies (in ms) how often the node will try to \nregister itself again. Allows administrator to restart the hub without \nrestarting (or risk orphaning) registered nodes. Must be specified with \nthe \"register\" option. Default: `5000`.\n- `nodeStatusCheckTimeout` -  When to time out a node status check. \nDefault: `5000`.\n- `nodePolling` - Specifies (in ms) how often the hub will \npoll to see if the node is still responding. Default: `5000`.\n- `unregisterIfStillDownAfter` - If the node remains down for more \nthan specified (in ms), it will stop attempting to re-register from the \nhub. Default: `60000`.\n- `downPollingLimit` - Node is marked as \"down\" if the node hasn't \nresponded after the number of checks specified. Default: `2`.\n- `debug` -  [TrueClass, FalseClass], default: false\n- `servlets` - List of extra servlets the grid (hub or node) will make \navailable. The servlet must exist in the path, e.g.,\n/grid/admin/Servlet. Default: `[]`.\n- `withoutServlets` - List of default (hub or node) servlets to disable. \nAdvanced use cases only. Not all default servlets can be disabled. \nDefault: `[]`.\n- `debug` -  Enables LogLevel.FINE. Default: `false`.\n- `timeout` -  Specifies the timeout before the server automatically \nkills a session that hasn't had any activity in the last X seconds. \nThe test slot will then be released for another test to use. This is \ntypically used to take care of client crashes. For grid hub/node roles, \ncleanUpCycle must also be set. Default: `1800`.\n- `browserTimeout` -  Number of seconds a browser session is allowed to \nhang while a WebDriver command is running (example: driver.get(url)). \nIf the timeout is reached while a WebDriver command is still processing, \nthe session will quit. Minimum value is `60`. An unspecified, zero, \nor negative value means wait indefinitely. Default: `0`.\n- `jettyMaxThreads` - Max number of threads for Jetty. An unspecified, \nzero, or negative value means the Jetty default value (200) will be \nused. Default: `-1`.\n- `log` - The filename to use for logging. If omitted, will log to \nSTDOUT. Default: `nil`. \n- `capabilities` -  Based on \n[capabilities](https://code.google.com/p/selenium/wiki/DesiredCapabilities). Default `[]`.\n- Mac OS X/Windows only - Set both username and password to run as a GUI service:\n    - `username` - Default `nil`.\n    - `password` - Default `nil`. Note that Windows password is stored unencrypted under windows registry\n`HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon` and Mac OS X  password is stored encrypted under \n`/etc/kcpassword` but it can be easily decrypted.\n    - `domain` - Optional for Windows only.  Default `nil`.\n\n### Example\n\n#### Install Selenium Node with Firefox and HtmlUnit capabilities\n\n```ruby\nselenium_node 'selenium_node' do\n  username 'vagrant' if platform?('windows', 'mac_os_x')\n  password 'vagrant' if platform?('windows', 'mac_os_x')\n  capabilities [\n    {\n      browserName: 'firefox',\n      maxInstances: 5,\n      seleniumProtocol: 'WebDriver'\n    },\n    {\n      browserName: 'htmlunit',\n      maxInstances: 1,\n      platform: 'ANY',\n      seleniumProtocol: 'WebDriver'\n    }\n  ]\n  action :install\nend\n```\n\n## ChefSpec Matchers\n\nThis cookbook includes custom \n[ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use \nto test your own cookbooks.\n\nExample Matcher Usage\n\n```ruby\nexpect(chef_run).to install_selenium_hub('resource_name').with(\n  port: '4444'\n)\n```\n      \nSelenium Cookbook Matchers\n\n- install_selenium_hub(resource_name)\n- install_selenium_node(resource_name)\n\n## Getting Help\n\n- Ask specific questions on \n[Stack Overflow](http://stackoverflow.com/questions/tagged/selenium).\n- Report bugs and discuss potential features in \n[Github issues](https://github.com/dhoer/chef-selenium/issues).\n\n## Contributing\n\nPlease refer to [CONTRIBUTING](https://github.com/dhoer/chef-selenium/blob/master/CONTRIBUTING.md).\n\n## License\n\nMIT - see the accompanying \n[LICENSE](https://github.com/dhoer/chef-selenium/blob/master/LICENSE.md) \nfile for details.\n",
  "maintainer": "Dennis Hoer",
  "maintainer_email": "dennis.hoer@gmail.com",
  "license": "MIT",
  "platforms": {
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "mac_os_x": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "windows": ">= 0.0.0"
  },
  "dependencies": {
    "macosx_autologin": ">= 4.0",
    "nssm": ">= 3.0",
    "windows": ">= 0.0.0",
    "windows_autologin": ">= 3.0"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "5.0.0",
  "source_url": "https://github.com/dhoer/chef-selenium",
  "issues_url": "https://github.com/dhoer/chef-selenium/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.14"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
